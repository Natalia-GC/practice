<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="AXIS_2" Id="{69b4595c-af66-4ec6-9934-eee65bea25f4}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM AXIS_2
VAR
//Outputs: Power for Limit switches, Home Sensors, etc.
    //bPowerSwitchesAxis1 AT %Q*: BOOL:= TRUE;

//Hardware interlocks
    //bInterlockFwdOK AT %I*: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Initial parameters of an Axis
(*IF _TaskInfo[fbGetCurTaskIndex.index].FirstCycle THEN
    //Axis description for EPICS PV
    GVL.astAxes[1].stDescription.sAxisName := 'MotorApplication1';
    GVL.astAxes[1].stDescription.eUnit := E_AxisEngUnit.eMeter;
    GVL.astAxes[1].stDescription.nPrefix := -3;

    //Initial default values:
    GVL.astAxes[1].stConfig.eHomeSeq := 0;
    GVL.astAxes[1].stConfig.fHomePosition := 0.0;
    GVL.astAxes[1].stConfig.fHomeFinishDistance := 0.0;
    GVL.astAxes[1].stConfig.eRestorePosition := E_RestorePosition.eRestoreWithoutHome;
END_IF*)

//Define ACTIONS() or write exclusive code for an specific axis.
(*Eg. Stop when temperature reaches certain values, reduce speed if  a signal is activated, etc.
Eg. GVL.astAxes[x].stControl.bInterlockFwd := NOT bInterlockFwdOK;*)

//Limits for negative axis, Axis 2
IF astAxes[2].stStatus.fActPosition > 100 THEN
    SlitProg.mySlit.bNegativeAxis_FwdLimit := FALSE;
ELSE
     SlitProg.mySlit.bNegativeAxis_FwdLimit :=TRUE;
END_IF
IF astAxes[2].stStatus.fActPosition < -100 THEN
     SlitProg.mySlit.bNegativeAxis_BwdLimit :=FALSE;
ELSE
     SlitProg.mySlit.bNegativeAxis_BwdLimit :=TRUE;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="AXIS_2">
      <LineId Id="3" Count="16" />
      <LineId Id="28" Count="1" />
      <LineId Id="50" Count="8" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>